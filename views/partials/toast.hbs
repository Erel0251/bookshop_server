<!-- Handlebars template for toast -->
<div id="toast-container" class="toast-container position-fixed bottom-0 end-0 p-3"></div>
<script id="toast-template" type="text/x-handlebars-template">
  <div class="toast align-items-center text-bg-{{type}} border-0" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
      <div class="toast-body">
        {{message}}
      </div>
      <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
  </div>
</script>

<!-- Handlebars template for toast -->
<script>
// Compile the Handlebars template
const toastTemplateSource = document.getElementById('toast-template').innerHTML;
const toastTemplate = Handlebars.compile(toastTemplateSource);

// Function to create and show a toast
function showToast(message, type) {
  const toastContainer = document.getElementById('toast-container');
  const toastHTML = toastTemplate({ message: message, type: type });
  const toastElement = document.createElement('div');
  toastElement.innerHTML = toastHTML;
  toastContainer.appendChild(toastElement.firstChild);

  // show up 3 seconds
  const toast = new bootstrap.Toast(toastContainer.lastElementChild, { delay: 3000 });
  toast.show();

  // Optionally, remove the toast element after it's hidden
  toastContainer.lastElementChild.addEventListener('hidden.bs.toast', function () {
    this.remove();
  });
}
</script>